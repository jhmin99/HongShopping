CREATE TABLE IF NOT EXISTS USERS (
    user_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    cart_id BIGINT,
    wish_list_id BIGINT,
    identification VARCHAR(255),
    password VARCHAR(255),
    name VARCHAR(255),
    birth_date DATETIME,
    phone_number VARCHAR(255),
    point INT DEFAULT 0,
    tier VARCHAR(255) DEFAULT 'IRON',
    amount_to_next_tier INT DEFAULT 50000,
    role VARCHAR(255) DEFAULT 'USER',
    registration_date DATETIME,
    refresh_token VARCHAR(255),
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT UniqueCartAndWishList UNIQUE (cart_id, wish_list_id)
    );

CREATE TABLE IF NOT EXISTS CART (
    cart_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    estimated_total_price BIGINT,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS WISH_LIST (
    wish_list_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS CATEGORY (
    category_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE IF NOT EXISTS ITEM (
    item_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    price INT NOT NULL,
    inventory INT,
    keyword VARCHAR(255),
    registration_date DATETIME,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE IF NOT EXISTS CATEGORY_ITEM (
    category_item_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    item_id BIGINT,
    category_id BIGINT,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (item_id) REFERENCES ITEM(item_id),
    FOREIGN KEY (category_id) REFERENCES CATEGORY(category_id)
    );

CREATE TABLE IF NOT EXISTS CART_ITEM (
    cart_item_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    item_id BIGINT,
    cart_id BIGINT,
    quantity INT NOT NULL,
    price BIGINT NOT NULL,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (item_id) REFERENCES ITEM(item_id),
    FOREIGN KEY (cart_id) REFERENCES CART(cart_id)
    );

CREATE TABLE IF NOT EXISTS WISH_ITEM (
    wish_item_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    item_id BIGINT,
    wish_list_id BIGINT,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (item_id) REFERENCES ITEM(item_id),
    FOREIGN KEY (wish_list_id) REFERENCES WISH_LIST(wish_list_id)
    );

CREATE TABLE IF NOT EXISTS EVENT (
    event_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    content VARCHAR(255) NOT NULL,
    registration_date DATETIME,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE IF NOT EXISTS USER_EVENT (
    user_event_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    event_id BIGINT,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id)
    );

CREATE TABLE IF NOT EXISTS Review (
    review_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    item_id BIGINT,
    rating INT NOT NULL,
    title VARCHAR(255) NOT NULL,
    content VARCHAR(255) NOT NULL,
    character_count VARCHAR(255) NOT NULL,
    has_photo BOOLEAN DEFAULT FALSE NOT NULL,
    registration_date DATETIME,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    FOREIGN KEY (item_id) REFERENCES ITEM(item_id)
    );

CREATE TABLE IF NOT EXISTS ITEM_INVENTORY_ALERT (
    item_inventory_alert_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    item_id BIGINT,
    registration_date DATETIME,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    FOREIGN KEY (item_id) REFERENCES ITEM(item_id)
    );

CREATE TABLE IF NOT EXISTS DELIVERY_ADDRESS (
    delivery_address_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    name VARCHAR(255) NOT NULL,
    phone_number VARCHAR(255) NOT NULL,
    zip_code INT NOT NULL,
    address VARCHAR(255) NOT NULL,
    address_detail VARCHAR(255) NOT NULL,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id)
    );

CREATE TABLE IF NOT EXISTS ITEM_INQUIRY (
    item_inquiry_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    item_id BIGINT,
    title VARCHAR(255) NOT NULL,
    content VARCHAR(255) NOT NULL,
    status VARCHAR(255) DEFAULT 'PUBLIC' NOT NULL,
    registration_date DATETIME,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    FOREIGN KEY (item_id) REFERENCES ITEM(item_id)
    );

CREATE TABLE IF NOT EXISTS COUPON (
    coupon_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    content VARCHAR(255) NOT NULL,
    expiration_date DATETIME NOT NULL,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE IF NOT EXISTS USER_COUPON (
    user_coupon_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    coupon_id BIGINT,
    is_valid BOOLEAN DEFAULT TRUE NOT NULL,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    FOREIGN KEY (coupon_id) REFERENCES COUPON(coupon_id)
    );

CREATE TABLE IF NOT EXISTS ALARM (
    alarm_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    content VARCHAR(255) NOT NULL,
    receiver VARCHAR(255),
    sender VARCHAR(255) NOT NULL,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );

CREATE TABLE IF NOT EXISTS USER_ALARM (
    user_alarm_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    alarm_id BIGINT,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    FOREIGN KEY (alarm_id) REFERENCES ALARM(alarm_id)
    );

CREATE TABLE IF NOT EXISTS IMAGE (
    image_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    item_id BIGINT,
    review_id BIGINT,
    event_id BIGINT,
    item_inquiry_id BIGINT,
    name VARCHAR(255) NOT NULL,
    url VARCHAR(255) NOT NULL,
    description VARCHAR(255),
    registration_date DATETIME,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (item_id) REFERENCES ITEM(item_id),
    FOREIGN KEY (review_id) REFERENCES REVIEW(review_id),
    FOREIGN KEY (event_id) REFERENCES EVENT(event_id),
    FOREIGN KEY (item_inquiry_id) REFERENCES ITEM_INQUIRY(item_inquiry_id)
    );

CREATE TABLE IF NOT EXISTS PAYMENT (
    payment_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    method VARCHAR(255) DEFAULT 'CARD' NOT NULL,
    amount BIGINT NOT NULL,
    status VARCHAR(255) DEFAULT 'PENDING' NOT NULL,
    payment_date DATETIME NOT NULL,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id)
    );

CREATE TABLE IF NOT EXISTS ORDERS (
    order_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    user_id BIGINT,
    payment_id BIGINT,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES USERS(user_id),
    FOREIGN KEY (payment_id) REFERENCES PAYMENT(payment_id)
    );

CREATE TABLE IF NOT EXISTS ORDER_ITEM (
    order_item_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    order_id BIGINT,
    item_id BIGINT,
    quantity INT NOT NULL,
    price BIGINT NOT NULL,
    creation_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    last_modified_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES ORDERS(order_id),
    FOREIGN KEY (item_id) REFERENCES ITEM(item_id)
    );
