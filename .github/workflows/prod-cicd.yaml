name: CI/CD for Production

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Generate code coverage report
        run: ./gradlew jacocoTestReport

      - name: Build Docker image
        run: docker build -t custom-shoppingmall-service:latest .

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push custom-shoppingmall-service:latest

      - name: SSH to Google Cloud VM and pull Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            echo "Installing gcloud CLI"
            sudo apt-get update && sudo apt-get install -y google-cloud-sdk
            
            echo "Authenticating gcloud"
            echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | gcloud auth activate-service-account --key-file=-

            echo "Running Docker commands"
            docker pull custom-shoppingmall-service:latest
            export DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}
            export DB_NAME=${{ secrets.DB_NAME }}
            export DB_USER=${{ secrets.DB_USER }}
            export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            export JWT_SECRET=${{ secrets.JWT_SECRET }}
            export SUPER_ADMIN_ID=${{ secrets.SUPER_ADMIN_ID }}
            export SUPER_ADMIN_PASSWORD=${{ secrets.SUPER_ADMIN_PASSWORD }}
            export CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}
            export GCP_STORAGE_BUCKET=${{ secrets.GCP_STORAGE_BUCKET }}
            export GCP_SERVICE_ACCOUNT_KEY=${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
            docker-compose down
            docker-compose up -d
