name: CI/CD for Production

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test

      - name: Generate code coverage report
        run: ./gradlew jacocoTestReport

      - name: Install Docker
        run: |
          echo "Installing Docker and Docker Compose"
                      sudo apt-get update
                      sudo apt-get install -y 
                      for pkg in docker.io docker-doc docker-compose docker-compose-v2 podman-docker containerd runc; do sudo apt-get remove $pkg; done

                      sudo apt-get update
                      sudo apt-get install ca-certificates curl
                      sudo install -m 0755 -d /etc/apt/keyrings
                      sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
                      sudo chmod a+r /etc/apt/keyrings/docker.asc

                      echo \
                      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
                      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
                      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
                      sudo apt-get update

                      sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

      - name: Build Docker image
        run: sudo docker build -t jihongmin/custom-shoppingmall-service-backend:latest .

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          sudo docker push jihongmin/custom-shoppingmall-service-backend:latest

      - name: Extract SSH key and save to file
        run: |
          mkdir -p /home/runner/.ssh
          echo "${{ secrets.GCP_SSH_KEY }}" | tr -d '\r' > /home/runner/.ssh/id_rsa
          chmod 600 /home/runner/.ssh/id_rsa

      - name: Set up Google Cloud credentials
        run: |
          echo "${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}" > $HOME/gcloud.json
          chmod 600 $HOME/gcloud.json
          export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json

      - name: SSH to Google Cloud VM and pull Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.GCP_VM_HOST }}
          username: ${{ secrets.GCP_VM_USER }}
          key_path: /home/runner/.ssh/id_rsa
          script: |
            if [ -d "custom-shoppingmall-service" ]; then
              echo "Repository already exists. Pulling latest changes."
              cd custom-shoppingmall-service
              git pull
            else
              echo "Cloning repository"
              git clone https://github.com/jhmin99/custom-shoppingmall-service.git
              cd custom-shoppingmall-service
            fi

            echo "Creating .env file"
            echo "DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}" > .env
            echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "SUPER_ADMIN_ID=${{ secrets.SUPER_ADMIN_ID }}" >> .env
            echo "SUPER_ADMIN_PASSWORD=${{ secrets.SUPER_ADMIN_PASSWORD }}" >> .env
            echo "CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}" >> .env
            echo "GCP_PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> .env
            echo "GCP_STORAGE_BUCKET=${{ secrets.GCP_STORAGE_BUCKET }}" >> .env
            echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json" >> .env

            echo "Running Docker commands"
            sudo docker pull jihongmin/custom-shoppingmall-service-backend:latest

            sudo docker-compose down
            sudo docker-compose up -d

      - name: Cleanup service account key file
        run: rm -f /home/runner/.ssh/id_rsa
